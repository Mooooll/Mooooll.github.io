const a={throttle(i,t,u=!0,e=!1){let o=0,l=!0,s=null;return function(...r){const n=new Date().getTime();!u&&l&&(o=n,l=!1);const m=n-o;m-t>=0&&(i.apply(this,r),o=n),m<t&&(s&&clearTimeout(s),s=setTimeout(()=>{e&&i.apply(this,r),l=!0},t))}},debounce(i,t=1e3,u=!0){let e;return function(){const o=this,l=[...arguments];if(e&&clearTimeout(e),u){const s=!e;e=setTimeout(()=>{e=null},t),s&&i.apply(o,l)}else e=setTimeout(()=>{i.apply(o,l)},t)}},sleep(i){return new Promise(t=>setTimeout(t,i))}};export{a as u};

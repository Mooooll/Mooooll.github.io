[
  {
    "date": "2024.3.5",
    "content": [
      "link--https://github.com/tailwindlabs/tailwindcss/discussions/5258--解决一个小问题：使用 @apply 时会报 Unknown at rule @apply。解决方法来自GitHub",
      "utils.js 新增 sleep 函数",
      "并整理了一下 utils.js"
    ]
  },
  {
    "date": "2024.3.6",
    "content": [
      "开发 dapai",
      "新增修改昵称和中途加入功能"
    ]
  },
  {
    "date": "2024.3.7",
    "content": [
      "开发 dapai",
      "增加非常丝滑的动画",
      "增加退出功能",
      {
        "name": "修复若干问题",
        "info": [
          "其中改名逻辑：用v-band 和 @input 替换掉了原来的 v-model",
          "player 组件的点击事件采用捕获方式：@click.capture",
          "新增玩家 id 改用时间戳",
          "改善了一些判定问题"
        ]
      }
    ]
  },
  {
    "date": "2024.3.11",
    "content": [
      "dapai完工",
      "完成支出，通吃逻辑",
      "新增历史记录，其中改名的历史记录大费周章",
      "增加响应式布局",
      "入口在其他里头"
    ]
  },
  {
    "date": "2024.3.15",
    "content": [
      "新增自定义指令：v-slide-in，元素移入视口时播放动画",
      "loading 页面长时间停留直接跳 404",
      "首页动画优化，背景图片重置"
    ]
  },
  {
    "date": "2024.3.16",
    "content": [
      "增加预加载 icon，DOM 加载完之后，花十秒来预加载页面用到的所有图标",
      "link--https://cn.vitejs.dev/guide/features#glob-import--vite-glob导入",
      "link--https://juejin.cn/post/7298332581354881034--Vite + Vue 中 img 动态设置 src",
      "楼上两位大功臣",
      "就这玩意花了我一下午试错",
      {
        "name": "原因：",
        "info": [
          "我希望图标能轻易修改颜色，暗色模式很需要这一点，我不想像公司里那样用两套图标，所以我的 svg 图标都是在 <span> 标签中 用 background-image: url('...'); 引入的",
          "于是那个元素不显示的时候它就不会加载，网速快无所谓，但网速慢体验极差"
        ]
      },
      {
        "name": "实现：",
        "info": [
          "首先 vite 导入：import.meta.glob('../assets/img/icon/*.svg')",
          "再把导入的对象解构到数组 list 直接拿去模板里遍历",
          "哦豁！模板中 img 的 src 无法被正确解析",
          "那就用url构造器 new URL(list[i], import.meta.url).href",
          "将得到一个url（字符串）：http://localhost:5173/src/assets/img/icon/chevron-back.svg",
          "再丢到模板里用，但由于是背景图片，我得丢 css里：:style=\"{ 'background-image': `url(${item})`}\"",
          "然后在模板里把这一坨给他绝对定位丢到外太空去藏着，偷偷加载",
          "然后十秒钟后噶掉它，省的添麻烦",
          "贴个码",
          "let need_preload = ref(true); let icon_list = reactive([]); const preloadIcon = async () => { await nextTick(); const list = Object.keys(import.meta.glob('../assets/img/icon/*.svg')); for (let i = 0; i < list.length; i++) { icon_list.push(new URL(list[i], import.meta.url).href); }; setTimeout(() => { need_preload.value = false; }, 1e4); }; preloadIcon()"
        ]
      },
      "更新 README.md"
    ]
  },
  {
    "date": "2024.3.20",
    "content": [
      "哦豁，楼上预加载到线上环境就嘎了",
      "使用 css 中 url 引入的，浏览器在渲染页面时通常会按需加载它们",
      "直接复制 svg 代码到模板里才是最优解，除了 log.vue 里的其他都改了，这里头的影响很小啦",
      "3.16 的我像个小丑🤡🤡🤡"
    ]
  },
  {
    "date": "2024.3.22",
    "content": [
      "16号那一长串英文太长了，log 增加强制换行",
      "增加一个彩色渐变背景 foot ，但它无法响应暗色模式，需要刷新，后续打算把它丢杂耍里，foot 用最简单的背景最好了",
      "foot 通过路由守卫来判断要不要展示，目前打算仅导航栏可直达的页面才展示 foot",
      "提取了一个全局的 @apply 名为 full-screen，用来填满屏幕",
      "更新 reademe ，增加 bus 说明",
      "增加了一些图片",
      {
        "name": "发现一个奇怪的问题，导航栏输入test进入我的测试界面后，再跳转其他任意路由，路由的页面就消失了，而其他页面没这个问题",
        "info":[
          "删掉路由动画，问题消失",
          "仔细对比每个路由的差别发现，test没有根 div，加上根 div 后，问题消失",
          "所以虽然 Vue3 可以不写根 div，但特殊情况下没有是会出问题的",
          "结论是保留一个根div，仍然是一个好习惯"
        ]
      }
    ]
  },
  {
    "date": "2024.3.20",
    "content": [
      "彩色渐变背景现在支持响应暗色模式了！",
      "也支持响应式了",
      "样式修改*n",
      "切换路由置顶延迟了150ms",
      "自定义了一个全局 color 到 tailwind.config.js",
      "完成：用 ResizeObserver 监听某个 div 的宽高"
    ]
  }
]